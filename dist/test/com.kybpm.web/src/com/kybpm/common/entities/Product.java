package com.kybpm.common.entities;
// Generated Jan 19, 2009 5:27:42 PM by Hibernate Tools 3.2.2.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product", catalog = "jb336")
public class Product implements java.io.Serializable {

	private Integer productId;
	private ProductType productType;
	private Vendor vendor;
	private String productName;
	private String productDescription;
	private double cost;
	private double price;
	private long quantity;
	private byte[] productImage;
	private Set<ProductOrder> productOrders = new HashSet<ProductOrder>(0);
	private Set<Discount> discounts = new HashSet<Discount>(0);

	public Product() {
	}

	public Product(ProductType productType, Vendor vendor, String productName,
			String productDescription, double cost, double price,
			long quantity, byte[] productImage) {
		this.productType = productType;
		this.vendor = vendor;
		this.productName = productName;
		this.productDescription = productDescription;
		this.cost = cost;
		this.price = price;
		this.quantity = quantity;
		this.productImage = productImage;
	}
	public Product(ProductType productType, Vendor vendor, String productName,
			String productDescription, double cost, double price,
			long quantity, byte[] productImage,
			Set<ProductOrder> productOrders, Set<Discount> discounts) {
		this.productType = productType;
		this.vendor = vendor;
		this.productName = productName;
		this.productDescription = productDescription;
		this.cost = cost;
		this.price = price;
		this.quantity = quantity;
		this.productImage = productImage;
		this.productOrders = productOrders;
		this.discounts = discounts;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "product_id", unique = true, nullable = false)
	public Integer getProductId() {
		return this.productId;
	}

	public void setProductId(Integer productId) {
		this.productId = productId;
	}
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "product_type_id", nullable = false)
	@NotNull
	public ProductType getProductType() {
		return this.productType;
	}

	public void setProductType(ProductType productType) {
		this.productType = productType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "vendor_id", nullable = false)
	@NotNull
	public Vendor getVendor() {
		return vendor;
	}

	public void setVendor(Vendor vendor) {
		this.vendor = vendor;
	}

	@Column(name = "product_name", nullable = false, length = 45)
	@NotNull
	@Length(max = 45)
	public String getProductName() {
		return this.productName;
	}

	public void setProductName(String productName) {
		this.productName = productName;
	}

	@Column(name = "product_description", nullable = false)
	@NotNull
	public String getProductDescription() {
		return this.productDescription;
	}

	public void setProductDescription(String productDescription) {
		this.productDescription = productDescription;
	}

	@Column(name = "cost", nullable = false, scale = 0)
	@NotNull
	public double getCost() {
		return this.cost;
	}

	public void setCost(double cost) {
		this.cost = cost;
	}

	@Column(name = "price", nullable = false, scale = 0)
	@NotNull
	public double getPrice() {
		return this.price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

	@Column(name = "quantity", nullable = false)
	@NotNull
	public long getQuantity() {
		return this.quantity;
	}

	public void setQuantity(long quantity) {
		this.quantity = quantity;
	}

	@Column(name = "product_image", nullable = false)
	@NotNull
	public byte[] getProductImage() {
		return this.productImage;
	}

	public void setProductImage(byte[] productImage) {
	 	this.productImage = productImage;
	}
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "product")
	@Transient
	public Set<ProductOrder> getProductOrders() {
		return this.productOrders;
	}

	public void setProductOrders(Set<ProductOrder> productOrders) {
		this.productOrders = productOrders;
	}
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "product")
	@Transient
	public Set<Discount> getDiscounts() {
		return this.discounts;
	}

	public void setDiscounts(Set<Discount> discounts) {
		this.discounts = discounts;
	}

}
