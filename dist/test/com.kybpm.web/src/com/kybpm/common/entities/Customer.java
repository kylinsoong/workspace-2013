package com.kybpm.common.entities;
// Generated Jan 19, 2009 5:27:42 PM by Hibernate Tools 3.2.2.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Customer generated by hbm2java
 */
@Entity
@Table(name = "customer", catalog = "jb336")
public class Customer implements java.io.Serializable {

	private Integer customerId;
	private Address address;
	private String firstName;
	private String lastName;
	private String userId;
	private String password;
	private Set<Order> orders = new HashSet<Order>(0);
	private Set<PaymentSource> paymentSources = new HashSet<PaymentSource>(0);

	public Customer() {
	}

	public Customer(Address address, String firstName, String lastName,
			String userId, String password) {
		this.address = address;
		this.firstName = firstName;
		this.lastName = lastName;
		this.userId = userId;
		this.password = password;
	}
	public Customer(Address address, String firstName, String lastName,
			String userId, String password, Set<Order> orders,
			Set<PaymentSource> paymentSources) {
		this.address = address;
		this.firstName = firstName;
		this.lastName = lastName;
		this.userId = userId;
		this.password = password;
		this.orders = orders;
		this.paymentSources = paymentSources;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "customer_id", unique = true)
	public Integer getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(Integer customerId) {
		this.customerId = customerId;
	}
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "address_id", nullable = false)
	@NotNull
	public Address getAddress() {
		return this.address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	@Column(name = "first_name", nullable = false, length = 45)
	@NotNull
	@Length(max = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", nullable = false, length = 45)
	@NotNull
	@Length(max = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "user_id", nullable = false, length = 45)
	@NotNull
	@Length(max = 45)
	public String getUserId() {
		return this.userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	@Column(name = "password", nullable = false, length = 45)
	@NotNull
	@Length(max = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "customer")
	@Transient
	public Set<Order> getOrders() {
		return this.orders;
	}

	public void setOrders(Set<Order> orders) {
		this.orders = orders;
	}
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "customer")
	@Transient
	public Set<PaymentSource> getPaymentSources() {
		return this.paymentSources;
	}

	public void setPaymentSources(Set<PaymentSource> paymentSources) {
		this.paymentSources = paymentSources;
	}

}
