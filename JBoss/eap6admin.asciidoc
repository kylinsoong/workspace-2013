OVERVIEW OF JBOSS EAP
---------------------
* Understanding EAP 6
** JBoss Enterprise Application Platform, or EAP for short, is an application server that supports Java EE 6.
** There are currently two Java EE 6 profiles implemented by EAP 6:
*** Full Profile
*** Web Profile
** Blazing Fast!
** Single Configuration File
** Lightweight
** Modular
** New Management Tools
*** Console
*** CLI

''''

* Standalone Mode vs. Domain Mode

.Standalone & Domain
image::img/eap6admin-01.png[]

* Host vs. Server

.Host & Server
image::img/eap6admin-02.png[]

''''

* Understanding Extensions, Subsystems and Profiles
** Extension:
*** A module that extends the core capabilities of EAP.
*** Java EE capabilities, clustering, transactions, security and logging are all extensions of the EAP core.
*** An extension is deployed in the modules folder of EAP.
*** Extensions are added to an EAP instance using the <extension> element in the EAP configuration file.
** Subsystems:
*** A subsystem is the set of capabilities added by an extension.
*** When an extension is added to an EAP instance, the capabilities and attributes of the extension are configured within the <subsystem> element in the EAP configuration file.
** Profiles:
*** A collection of subsystems, along with the details of each subsystem's configuration.
*** A profile is defined in the EAP configuration file using the <profile> element.
*** The only allowed child element of <profile> is <subsystem>.
*** You can only define multiple profiles in Domain mode in domain.xml.
*** Standalone mode only has one profile defined in standalone.xml, and this profile does not have a name.

----
<domain xmlns="urn:jboss:domain:1.1">
	<extensions>
		<extension module="org.jboss.as.clustering.infinispan"/>
		<extension module="org.jboss.as.clustering.jgroups"/>
		<extension module="org.jboss.as.logging"/>
		<extension module="org.jboss.as.messaging"/>
		<extension module="org.jboss.as.ee"/>
	</extensions>
	<profiles>
		<profile name="default">
			<subsystem xmlns="urn:jboss:domain:logging:1.1">
			...settings for the logging subsystem
			</subsystem>
			<subsystem xmlns="urn:jboss:domain:ee:1.0"/>
		</profile>
		<profile name="ha">
			<subsystem xmlns="urn:jboss:domain:logging:1.1">
			...settings for the logging subsystem
			</subsystem>
			<subsystem xmlns="urn:jboss:domain:infinispan:1.0" default-cache-container="cluster">
			...settings for the infinispan subsystem
			</subsystem>
			<subsystem xmlns="urn:jboss:domain:jgroups:1.0" default-stack="udp">
			...settings for the jgroups subsystem
			</subsystem>
		</profile>
	</profiles>
</domain>
----

''''

* Use Cases for Standalone Mode vs. Domain Mode
** A developer is working on their desktop, developing Java EE applications using JBoss Developer Studio and testing the code on the same desktop machine.
** A single Java EE application is deployed on a production server.
** Three Java EE applications are deployed on a production server.
** Your server topology requires EAP running in a cluster of four machines, each machine with a single EAP server instance and each host having identical configurations.
** You need to deploy a two-node cluster for fail-over purposes.
** You have 12 EAP servers that all need to configured identically.

* Introducing the DMR Syntax
----
"logging" => {
	  "console-handler" => {"CONSOLE" => {
	  "autoflush" => true,
	  "encoding" => undefined,
	  "formatter" => "%d{HH:mm:ss,SSS} %-5p [%c] (%t) E%n",
	  "level" => "INFO",
	  "name" => "CONSOLE",
	  "target" => "System.out"
	}}
	...remainder of the logging subsystem
}

----

* The Standalone Directory Structure
** *configuration:* contains the configuration files for Standalone mode, along with a standalone_xml_history subfolder.
** *deployments:* contains your deployment EAR, WAR and JAR files. Marker files also appear in this folder.
** *lib:* for deploying common JAR files.
** *data:* a location available to services that store content in the file system.
** *log:* the default location for boot.log and the server log files.
** *tmp:* for temporary files.

* The standalone.xml Configuration File
----
<server xmlns="urn:jboss:domain:1.0">
	<extensions>
	...list of extensions here
	</extensions>
	<management>
	...management interfaces defined here
	</management>
	<profile>
	...list of subsystems and their configurations
	</profile>
	<interfaces>
	...interface definitions
	</interfaces>
	<socket-binding-group>
	...socket binding definitions
	</socket-binding-group>
	<deployments>
	...deployed applications go here
	</deployments>
</server>
----

* The <extension> Element
** Extensions are modules that extend the core capabilities of the server.
** An extension defines one or more subsystems.
----
<extensions>
	<!-- list all extensions you want made available to this server -->
	<extension module="org.jboss.as.clustering.infinispan"/>
	<extension module="org.jboss.as.deployment-scanner"/>
	<extension module="org.jboss.as.ejb3"/>
	<extension module="org.jboss.as.jpa"/>
</extensions>
----

* The <management> Element
** There are two management interfaces available in EAP:
*** *HTTP Interface:* is used to provide the GWT-based administration Console.
*** *Native Interface:* allows for management operations to be executed over a proprietary binary protocol, which is what the command line interface (CLI) tool uses.
----
<management>
	<security-realms>
		<security-realm name="PropertiesMgmtSecurityRealm">
			<authentication>
				<properties path="mgmt-users.properties" relative-to="jboss.server.config.dir"/>
			</authentication>
		</security-realm>
	</security-realms>
	<management-interfaces>
		<native-interface interface="management" port="9999"/>
		<http-interface interface="management" port="9990" security-realm="PropertiesMgmtSecurityRealm"/>
	</management-interfaces>
</management>
----

* The <profile> Element
** A profile is a collection of subsystems.
----
<profile>
	<subsystem xmlns="urn:jboss:domain:deployment-scanner:1.0">
		<deployment-scanner scan-interval="5000" relative-to="jboss.server.base.dir" path="deployments" />
	</subsystem>
	<subsystem xmlns="urn:jboss:domain:ee:1.0" />
	<subsystem xmlns="urn:jboss:domain:ejb3:1.0" />
</profile>
----

* The <interfaces> Element
** An interface is a logical name for a network interface, IP address or host name to which a socket can be bound.
----
<interfaces>
        <interface name="management">
            <inet-address value="${jboss.bind.address.management:127.0.0.1}"/>
        </interface>
        <interface name="public">
            <inet-address value="${jboss.bind.address:127.0.0.1}"/>
        </interface>
        <interface name="unsecure">
            <inet-address value="${jboss.bind.address.unsecure:127.0.0.1}"/>
        </interface>
</interfaces>
----

* The <socket-binding-group> Element
** A socket binding group is a named collection of socket bindings, which allows you to define all of the ports needed for your EAP instance.
----
<socket-binding-group name="standard-sockets" default-interface="public">
	<socket-binding name="http" port="8080"/>
	<socket-binding name="https" port="8443"/>
	<socket-binding name="jmx-connector-registry" port="1090"/>
	<socket-binding name="jmx-connector-server" port="1091"/>
	<socket-binding name="jndi" port="1099"/>
	<socket-binding name="osgi-http" port="8090"/>
	<socket-binding name="remoting" port="4447"/>
	<socket-binding name="txn-recovery-environment" port="4712"/>
	<socket-binding name="txn-status-manager" port="4713"/>
</socket-binding-group>
----

* The <deployments> Element
** The <deployments> section of standalone.xml lists the deployed applications on your Standalone server.
----
<deployments>
        <deployment name="jboss-as-ejb-in-war.war" runtime-name="jboss-as-ejb-in-war.war" enabled="false">
            <content sha1="ef968dfbb7ce74e39e72928f8b6ce94db0003991"/>
        </deployment>
        <deployment name="destination-1.0.jar" runtime-name="destination-1.0.jar" enabled="false">
            <content sha1="2b911307236733ac175266d382d4232aca4db4a1"/>
        </deployment>
        <deployment name="ticket-monster.war" runtime-name="ticket-monster.war" enabled="false">
            <content sha1="21b22b77059d68829abe9e1f4ea3efbccaf9151d"/>
        </deployment>
        <deployment name="smartWebber.war" runtime-name="smartWebber.war">
            <content sha1="e6f3d73b10ba07113f7dfc9b6c8e71be2050f904"/>
        </deployment>
</deployments>
----

''''

Lab-1
^^^^^

Lab-1-1: Installing EAP
+++++++++++++++++++++++
. unzip 'jboss-eap-6.0.0.zip'
. Start
.. To start eap6 using the default full profile configuration in "standalone" mode, change directory to $JBOSS_HOME/bin.
----
./standalone.sh
----

.. To start the default full profile configuration using domain management capabilities,
----
./domain.sh
----

.. To use the full profile with clustering capabilities, use the following syntax from $JBOSS_HOME/bin:
----
./standalone.sh --server-config=standalone-ha.xml
----

Lab-1-2: Defining Profiles
++++++++++++++++++++++++++



Lab-1-3: The Command Line Interface
+++++++++++++++++++++++++++++++++++
. If you prefer to manage your server from the command line (or batching), the jboss-cli.sh script provides the same capabilities available via the web-based UI.  This script is accessed from $JBOSS_HOME/bin directory; e.g.,
----
	cd $JBOSS_HOME/bin
	./jboss-cli.sh --connect
	Connected to standalone controller at localhost:9999
----

Lab-1-4: Deploying Applications Automatically
+++++++++++++++++++++++++++++++++++++++++++++





Lab-1-5: Deploying Applications Manually
++++++++++++++++++++++++++++++++++++++++



Configuring EAP in Domain Mode
------------------------------







Configuring Servers
-------------------





The Datasource Subsystem
------------------------






The Logging Subsystem
---------------------





The Messaging Subsystem
-----------------------







The Security Subsystem
----------------------






JVM Configuration
-----------------







Migrating Applications to EAP6
------------------------------





The Web Subsystem
-----------------





An Introduction to Clustering
-----------------------------
